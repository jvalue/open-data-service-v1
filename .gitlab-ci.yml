image: $CI_REGISTRY_IMAGE/ci-base
services:
    - docker:dind

# For predefined environment variables see: https://docs.gitlab.com/ee/ci/variables/
variables:
    # Instruct Testcontainers to use the daemon of DinD.
    # See further: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
    DOCKER_HOST: "tcp://docker:2375"
    # Improve performance with overlayfs.
    # See further: https://docs.docker.com/storage/storagedriver/overlayfs-driver/
    # See further: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
    DOCKER_DRIVER: "overlay2"
    IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}"
    GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
    # ODS related enviroment variables
    ODS_IT_HOST: docker
    ODS_IT_COUCHDB_HOST: docker

stages:
  - build
  - build-docker
  - test
  - deploy

before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

cache:
    paths:
        - .gradle/wrapper
        - .gradle/caches

build-ci-image:
    stage: build
    image: docker:stable
    when: manual
    script:
        - docker build -t $CI_REGISTRY_IMAGE/ci-base ./docker/ci-base
        - docker push $CI_REGISTRY_IMAGE/ci-base

build:
    stage: build
    script: 
        - "./gradlew assemble"
    # after_script:
    #     - "./gradlew copyDockerAssets" # copy it for docker task
    # artifacts:
    #     paths:
    #         - "./docker/ods/"

build-docker:
    stage: build-docker
    dependencies:
        - build
    script:
        - "./gradlew copyDockerAssets"
        - docker build -t ods-ci/ods ./docker/ods
        - mkdir image
        - docker save ods-ci/ods > image/ods-ci.tar
    artifacts:
        expire_in: 1 day
        paths:
            - image/

unit-tests:
    stage: test
    script: "./gradlew test"
    artifacts:
        reports:
            junit: "*/build/test-results/**/*.xml"

integration-test:
    stage: test
    dependencies:
        - build-docker
    script:
        - docker load -i image/ods-ci.tar 
        - docker-compose -f docker/docker-compose.yml -f docker/docker-compose.local.yml up -d
        - ./gradlew clean integrationTest
    after_script:
        - docker-compose -f docker/docker-compose.yml -f docker/docker-compose.local.yml down

publish:
    stage: deploy
    dependencies:
       - build-docker
    when: manual
    # only:
    #    - master
    script:
       - docker load -i image/ods-ci.tar
       # Tag as latest and push
       - docker tag ods-ci/ods  $CI_REGISTRY_IMAGE/ods:latest
       - docker push $CI_REGISTRY_IMAGE/ods:latest
       # Tag as project version and push
       - "export ODS_VERSION = ./gradlew properties -q | grep \"version:\" | awk '{print $2}'"
       - docker tag ods-ci/ods  $CI_REGISTRY_IMAGE/ods:$ODS_VERSION
       - docker push $CI_REGISTRY_IMAGE/ods:$ODS_VERSION
    